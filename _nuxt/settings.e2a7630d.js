import{r as d,o as _,b as m,m as v,v as y,u as p,f as e,q as b,s as S,x as P,y as w,e as h,t as $,F as k,J as u}from"./entry.6130ca20.js";import{g as T}from"./getMessagesFromError.bead1578.js";import{T as C}from"./Toolbar.eb091e3f.js";const F=["onSubmit"],x=e("label",{for:"change-current"},"Current Password",-1),E=e("label",{for:"login-password"},"New Password",-1),V=e("input",{type:"submit",value:"Change Password"},null,-1),A={__name:"ChangePasswordForm",emits:["success","error"],setup(f,{emit:r}){const s=d(""),o=d(""),t=d(null),n=()=>t.value.focus(),a=()=>{s.value="",o.value=""},g=async()=>{try{const l=`${P().public.jwtApi}/auth/changePassword`,c=await $fetch(l,{method:"post",body:JSON.stringify({currentPassword:s.value,newPassword:o.value}),headers:{Authorization:w().authHeaderValue}});a(),r("success",c)}catch(l){n(),r("error",l)}};return(l,c)=>(_(),m("form",{action:"#",method:"post",onSubmit:S(g,["prevent"])},[x,v(e("input",{id:"change-current",ref_key:"currentPasswordField",ref:t,"onUpdate:modelValue":c[0]||(c[0]=i=>b(s)?s.value=i:null),type:"password",placeholder:"Current Password",name:"current-password"},null,512),[[y,p(s)]]),E,v(e("input",{id:"change-new","onUpdate:modelValue":c[1]||(c[1]=i=>b(o)?o.value=i:null),type:"password",placeholder:"New Password",name:"new-password"},null,512),[[y,p(o)]]),V],40,F))}},I=["onSubmit"],N=e("input",{type:"submit",value:"Invalidate Tokens"},null,-1),j=[N],B={__name:"InvalidateTokenForm",emits:["success","error"],setup(f,{emit:r}){const s=w(),o=async()=>{try{const t=`${P().public.jwtApi}/auth/invalidateTokens`,{token:n}=await $fetch(t,{method:"get",headers:{Authorization:s.authHeaderValue}});s.setToken(n),r("success",n)}catch(t){r("error",t)}};return(t,n)=>(_(),m("form",{action:"#",method:"get",onSubmit:S(o,["prevent"])},j,40,I))}},M=e("h1",null,"Settings",-1),z=e("h3",null,"Invalidate Tokens",-1),D=e("p",null,"All tokens will be invalidated and your current session will get a new token. This effectively forces you to be logged out of all other devices.",-1),H=e("h3",null,"Change Password",-1),J=e("h3",null,"Plan",-1),O={__name:"settings",setup(f){const r=w(),s=()=>{u.info("Successfully invalidated tokens")},o=a=>{u.error("There was an error, please refresh and try again"),console.error(a)},t=()=>{u.info("Successfully changed password")},n=a=>{u.error(T(a).join(", ")),console.error(a)};return(a,g)=>(_(),m(k,null,[h(C,{class:"mb-4","is-settings":""}),M,z,D,h(B,{onSuccess:s,onError:o}),H,h(A,{onSuccess:t,onError:n}),J,e("pre",null,$(p(r).plan),1)],64))}};export{O as default};
